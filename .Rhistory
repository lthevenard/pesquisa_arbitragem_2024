answer=factor(answer, ordered=T, levels=c("Sim", "Não", "N/A", "N/D"))) %>%
group_by(question, answer) %>%
count_and_perc() %>%
mutate(color_case=answer %in% c("N/A", "N/D")) %>%
ggplot(aes(x=answer, y=n, label=lbl_n_perc, color=color_case, fill=color_case)) +
geom_col() +
geom_text(size=3, fontface="bold", nudge_y=2) +
labs(
title="Impugnações, recusas e renúncias no processo de seleção dos árbitros",
subtitle=subtitle, x="", y="Número de Árbitros"
) +
scale_color_manual(values=c(single, "#555")) +
scale_fill_manual(values=c(single, "#555")) +
facet_wrap(~question, ncol=2) +
theme(legend.position="none")
save_plot("47_impugnacoes_arbitros.png")
df_relacao_ator_arbitragem %>%
filter(str_detect(tipo_relacao, "Árbitro")) %>%
select(all_of(names(impugna_questions_dict))) %>%
pivot_longer(cols=names(impugna_questions_dict), names_to="question", values_to="answer") %>%
mutate(question=map_chr(question, return_impugna_question),
answer=factor(answer, ordered=T, levels=c("Sim", "Não", "N/A", "N/D"))) %>%
group_by(question, answer) %>%
count_and_perc() %>%
mutate(color_case=answer %in% c("N/A", "N/D")) %>%
ggplot(aes(x=answer, y=n, label=lbl_n_perc, color=color_case, fill=color_case)) +
geom_col() +
geom_text(size=3, fontface="bold", nudge_y=4) +
labs(
title="Impugnações, recusas e renúncias no processo de seleção dos árbitros",
subtitle=subtitle, x="", y="Número de Árbitros"
) +
scale_color_manual(values=c(single, "#555")) +
scale_fill_manual(values=c(single, "#555")) +
facet_wrap(~question, ncol=2) +
theme(legend.position="none")
save_plot("47_impugnacoes_arbitros.png")
df_relacao_ator_arbitragem %>%
filter(str_detect(tipo_relacao, "Árbitro")) %>%
select(all_of(names(impugna_questions_dict))) %>%
pivot_longer(cols=names(impugna_questions_dict), names_to="question", values_to="answer") %>%
mutate(question=map_chr(question, return_impugna_question),
answer=factor(answer, ordered=T, levels=c("Sim", "Não", "N/A", "N/D"))) %>%
group_by(question, answer) %>%
count_and_perc() %>%
mutate(color_case=answer %in% c("N/A", "N/D")) %>%
ggplot(aes(x=answer, y=n, label=lbl_n_perc, color=color_case, fill=color_case)) +
geom_col() +
geom_text(size=3, fontface="bold", nudge_y=5) +
labs(
title="Impugnações, recusas e renúncias no processo de seleção dos árbitros",
subtitle=subtitle, x="", y="Número de Árbitros"
) +
scale_color_manual(values=c(single, "#555")) +
scale_fill_manual(values=c(single, "#555")) +
facet_wrap(~question, ncol=2) +
theme(legend.position="none")
save_plot("47_impugnacoes_arbitros.png")
df_arbitragens %>%
simple_question_bar_plot(
bar_var="houve_intervencao_terceiros",
nudge=1,
title_label="Arbitragens com intervenção de terceiros",
subtitle_label=subtitle,
x_label="Houve intervenção de terceiros?",
y_label="Número de arbitragens"
)
save_plot("48_houve_intervencao_terceiros.png")
save_plot("48_houve_intervencao_terceiros.png")
df_arbitragens %>%
group_by(uf_arbitragem, houve_intervencao_terceiros) %>%
count_and_perc() %>%
ungroup() %>%
plot_fillcol(
col_category="houve_intervencao_terceiros",
fill_category="uf_arbitragem",
title_label="Arbitragens com intervenção de terceiros por UF",
x_label="Houve intervenção de terceiros?",
y_label="Número de arbitragens",
fill_label="Unidade Federativa: ",
fill_colors=pal_uf,
lbl_colors=pal_uf,
order_bars=FALSE,
order_fill=FALSE,
theme_func=theme_bw
)
save_plot("49_houve_intervencao_terceiros_por_uf.png")
df_arbitragens %>%
group_by(uf_arbitragem, caiu_em_precatorio) %>%
count_and_perc() %>%
ungroup() %>%
plot_fillcol(
col_category="caiu_em_precatorio",
fill_category="uf_arbitragem",
title_label="Arbitragens que caíram em precatório, por UF",
x_label="Caiu em precatório?",
y_label="Número de arbitragens",
fill_label="Unidade Federativa: ",
fill_colors=pal_uf,
lbl_colors=pal_uf,
order_bars=FALSE,
order_fill=FALSE,
theme_func=theme_bw
)
save_plot("50_caiu_em_precatorio_por_uf.png")
df_arbitragens %>%
group_by(uf_arbitragem, caiu_em_precatorio) %>%
count_and_perc() %>%
ungroup() %>%
plot_fillcol(
col_category="caiu_em_precatorio",
fill_category="uf_arbitragem",
title_label="Arbitragens que caíram em precatório, por UF",
x_label="Caiu em precatório?",
y_label="Número de arbitragens",
fill_label="Unidade Federativa: ",
fill_colors=pal_uf,
lbl_colors=pal_uf,
order_bars=FALSE,
order_fill=FALSE,
lbl_size=2.5,
theme_func=theme_bw
)
save_plot("50_caiu_em_precatorio_por_uf.png")
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(nudge_x=3, size=3, fontface="bold", color=single) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
save_plot("51_tipos_documentos_disponiveis.png")
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(nudge_x=3, size=3, fontface="bold", color=single, hjust=-1, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(nudge_x=3, size=3, fontface="bold", color=single, hjust=1, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(nudge_x=3, size=3, fontface="bold", color=single, hjust=-0.1, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(nudge_x=3, size=3, fontface="bold", color=single, hjust=-0.01, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(nudge_x=2, size=3, fontface="bold", color=single, hjust=-0.01, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
save_plot("51_tipos_documentos_disponiveis.png")
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(size=3, fontface="bold", color=single, hjust=-0.01, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
save_plot("51_tipos_documentos_disponiveis.png")
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(size=3, fontface="bold", color=single, hjust=-0.02, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
)
save_plot("51_tipos_documentos_disponiveis.png")
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(size=3, fontface="bold", color=single, hjust=-0.03, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
) +
scale_x_continuous(limits=c(0, 80), breaks=seq(0, 80, 10))
df_documentos %>%
mutate(tipo_documento = tipo_documento %>%
fct_lump_n(10, other_level = "Outros_tipos") %>%
fct_infreq() %>%
fct_rev() %>%
fct_relevel("Outros_tipos")) %>%
group_by(tipo_documento) %>%
count_and_perc() %>%
ggplot(aes(x=n, y=tipo_documento, label=lbl_n_perc)) +
geom_col(fill=single) +
geom_text(size=3, fontface="bold", color=single, hjust=-0.03, vjust=0) +
labs(
title="Tipos de documentos mais frequentemente disponíveis",
x="Número de Documentos",
y="Tipo de Documento"
) +
scale_x_continuous(limits=c(0, 90), breaks=seq(0, 90, 15))
save_plot("51_tipos_documentos_disponiveis.png")
df_documentos %>%
count(tipo_documento)
df_documentos %>%
count(macro_tipo)
macro_tipos_comparar <- c(
"Alegações Finais",
"Alegações Iniciais",
"Réplica",
"Tréplica",
"Decisão",
"Sentença"
)
df_documentos_comparar_tipos <- df_documentos %>%
filter(macro_tipo %in% macro_tipos_comparar) %>%
mutate(doc_class = ifelse(macro_tipo %in% macro_tipos_comparar[1:4], "Partes", "Corte"))
macro_tipos_comparar <- c(
"Alegações Iniciais",
"Réplica",
"Tréplica",
"Alegações Finais",
"Decisão",
"Sentença"
)
df_documentos_comparar_tipos <- df_documentos %>%
filter(macro_tipo %in% macro_tipos_comparar) %>%
mutate(doc_class = ifelse(macro_tipo %in% macro_tipos_comparar[1:4], "Partes", "Corte"),
macro_tipo = factor(macro_tipo, ordered=T, levels=macro_tipos_comparar))
single
doc_class_colors = c(single, "#C14444")
doc_class_fills = c(pal_uf[3], "#D09B9B")
doc_class_colors = c(single, "#C14444")
doc_class_fills = c(pal_uf[3], "#D09B9B")
df_documentos_comparar_tipos <- df_documentos %>%
filter(macro_tipo %in% macro_tipos_comparar) %>%
mutate(doc_class = ifelse(macro_tipo %in% macro_tipos_comparar[1:4], "Partes", "Corte"),
macro_tipo = factor(macro_tipo, ordered=T, levels=macro_tipos_comparar))
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipos, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_FILL_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle)
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipos, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle)
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle)
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle) +
guides(fill = guide_legend(reverse=T))
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle) +
guides(fill = guide_legend(reverse=T), color=guide_legend(reverse=T))
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle,
x="Tipo de Documento", y="Tamanho do Documento (Número de Páginas)",
fill="Classe de autores: ") +
guides(fill = guide_legend(reverse=T), color=guide_legend(reverse=T))
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Tamanho dos tipos de documento",
subtitle=subtitle,
x="Tipo de Documento", y="Tamanho do Documento (Número de Páginas)") +
guides(fill = guide_legend(title="Classe de autores: ", reverse=T),
color=guide_legend(title="Classe de autores: ", reverse=T))
save_plot("52_comparacao_tamanho_dos_documentos.png")
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Comparação dos tamanhos de alguns tipos e autores de documentos",
subtitle=subtitle,
x="Tipo de Documento", y="Tamanho do Documento (Número de Páginas)") +
guides(fill = guide_legend(title="Classe de autores: ", reverse=T),
color=guide_legend(title="Classe de autores: ", reverse=T))
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Comparação dos tamanhos de alguns tipos documentos",
subtitle=subtitle,
x="Tipo de Documento", y="Tamanho do Documento (Número de Páginas)") +
guides(fill = guide_legend(title="Classe de autores: ", reverse=T),
color=guide_legend(title="Classe de autores: ", reverse=T))
df_documentos_comparar_tipos %>%
ggplot(aes(x=macro_tipo, y=tamanho_documento, fill=doc_class, color=doc_class)) +
geom_boxplot() +
scale_color_manual(values=doc_class_colors) +
scale_fill_manual(values=doc_class_fills) +
labs(title="Comparação dos tamanhos de alguns tipos documentos",
subtitle=subtitle,
x="Tipo de Documento", y="Tamanho do Documento (Número de Páginas)") +
guides(fill = guide_legend(title="Classe de autores: ", reverse=T),
color=guide_legend(title="Classe de autores: ", reverse=T))
save_plot("52_comparacao_tamanho_dos_documentos.png")
df_documentos %>%
left_join(df_arbitragens, by="id_arbitragem") %>%
time_calc_year_end() %>%
filter(macro_tipo == "Sentença") %>%
ggplot(aes(x=year, y=tamanho_documento)) +
scale_x_continuous(breaks=2000:2025) +
geom_smooth(method="lm",
se=F,
color="pink",
linetype="dashed") +
geom_point(color=single,
alpha=0.6,
size=3) +
stat_summary(geom="pointrange",
fun=function(x) {ifelse(length(x) < 2, NA, mean(x))},
color=pal_uf[1],
shape=8) +
labs(title="Tamanhos das sentenças arbitrais por ano de fim da arbitragem",
subtitle=subtitle,
x="Ano de fim da arbitragem",
y="Tamanho da Sentença Arbitral")
save_plot("53_tamanho_das_sentencas_por_ano.png")
df_arbitragens %>%
simple_question_bar_plot(
bar_var="teve_liminar_pre_arbitral",
nudge=1,
title_label="Arbitragens com liminar pré-arbitral",
subtitle_label=subtitle,
x_label="Houve liminar pré-arbitral?",
y_label="Número de arbitragens"
)
save_plot("54_teve_liminar_pre_arbitral.png")
df_arbitragens %>%
group_by(uf_arbitragem, houve_intervencao_terceiros) %>%
count_and_perc() %>%
ungroup() %>%
plot_fillcol(
col_category="teve_liminar_pre_arbitral",
fill_category="uf_arbitragem",
title_label="Arbitragens com liminar pré-arbitral por UF",
x_label="Houve liminar pré-arbitral?",
y_label="Número de arbitragens",
fill_label="Unidade Federativa: ",
fill_colors=pal_uf,
lbl_colors=pal_uf,
order_bars=FALSE,
order_fill=FALSE,
theme_func=theme_bw
)
df_arbitragens %>%
group_by(uf_arbitragem, teve_liminar_pre_arbitral) %>%
count_and_perc() %>%
ungroup() %>%
plot_fillcol(
col_category="teve_liminar_pre_arbitral",
fill_category="uf_arbitragem",
title_label="Arbitragens com liminar pré-arbitral por UF",
x_label="Houve liminar pré-arbitral?",
y_label="Número de arbitragens",
fill_label="Unidade Federativa: ",
fill_colors=pal_uf,
lbl_colors=pal_uf,
order_bars=FALSE,
order_fill=FALSE,
theme_func=theme_bw
)
save_plot("55_teve_liminar_pre_arbitral_por_uf.png")
df_arbitragens %>%
group_by(transparencia) %>%
count_and_perc()
df_arbitragens %>%
group_by(transparencia) %>%
count_and_perc() %>%
select(transparencia, n, lbl_perc) %>%
export_table("1_transparencia")
df_arbitragens %>%
mutate(uf_arbitragem = ifelse(uf_arbitragem == "Federal", "Federais", "Estaduais (SP e RJ)") %>% fct_rev()) %>%
group_by(uf_arbitragem, transparencia) %>%
count_and_perc()
df_arbitragens %>%
mutate(uf_arbitragem = ifelse(uf_arbitragem == "Federal", "Federais", "Estaduais (SP e RJ)") %>% fct_rev()) %>%
group_by(uf_arbitragem, transparencia) %>%
count_and_perc() %>%
select(uf_arbitragem, transparencia, n, perc) %>%
export_table("2_transparencia_por_uf")
df_arbitragens %>%
group_by(transparencia) %>%
count_and_perc() %>%
select(transparencia, n, lbl_perc) %>%
export_table("1_transparencia.csv")
df_arbitragens %>%
mutate(uf_arbitragem = ifelse(uf_arbitragem == "Federal", "Federais", "Estaduais (SP e RJ)") %>% fct_rev()) %>%
group_by(uf_arbitragem, transparencia) %>%
count_and_perc() %>%
select(uf_arbitragem, transparencia, n, perc) %>%
export_table("2_transparencia_por_uf.csv")
